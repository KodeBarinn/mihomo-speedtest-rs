name: Publish to Crates.io

on:
  push:
    tags:
      - 'v*.*.*'
    branches:
      - main

env:
  CARGO_TERM_COLOR: always

jobs:
  # Cross-platform testing job
  test:
    name: Test on ${{ matrix.os }} (${{ matrix.arch }})
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          # Windows
          - os: windows-latest
            arch: x86_64
            target: x86_64-pc-windows-msvc
          - os: windows-latest
            arch: aarch64
            target: aarch64-pc-windows-msvc
          
          # Ubuntu
          - os: ubuntu-latest
            arch: x86_64
            target: x86_64-unknown-linux-gnu
          
          # macOS (both architectures natively supported)
          - os: macos-latest
            arch: x86_64
            target: x86_64-apple-darwin
          - os: macos-latest
            arch: aarch64
            target: aarch64-apple-darwin

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}

      - name: Cache cargo registry
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-${{ matrix.arch }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-${{ matrix.arch }}-cargo-

      - name: Run cargo check
        run: cargo check --target ${{ matrix.target }} --verbose

      - name: Run cargo clippy
        run: cargo clippy --target ${{ matrix.target }} --all-targets --all-features -- -D warnings

      - name: Run cargo fmt check
        run: cargo fmt --all -- --check

  # Publishing job (only runs if all tests pass)
  publish:
    name: Publish to Crates.io
    runs-on: ubuntu-latest
    needs: test
    if: startsWith(github.ref, 'refs/tags/v')
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Rust toolchain
        uses: dtolnay/rust-toolchain@stable

      - name: Cache cargo registry
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ubuntu-latest-cargo-publish-${{ hashFiles('**/Cargo.lock') }}

      - name: Verify version matches tag
        run: |
          TAG_VERSION=${GITHUB_REF#refs/tags/v}
          CARGO_VERSION=$(cargo metadata --no-deps --format-version 1 | jq -r '.packages[0].version')
          echo "Tag version: $TAG_VERSION"
          echo "Cargo.toml version: $CARGO_VERSION"
          if [ "$TAG_VERSION" != "$CARGO_VERSION" ]; then
            echo "Error: Tag version ($TAG_VERSION) does not match Cargo.toml version ($CARGO_VERSION)"
            exit 1
          fi

      - name: Final cargo check
        run: cargo check --verbose

      - name: Final cargo clippy
        run: cargo clippy --all-targets --all-features -- -D warnings

      - name: Run tests
        run: cargo test --verbose

      - name: Publish to crates.io
        run: cargo publish --token ${{ secrets.CARGO_REGISTRY_TOKEN }}
        env:
          CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}

      - name: Create GitHub Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          body: |
            ## Release ${{ github.ref }}
            
            Published to [crates.io](https://crates.io/crates/mihomo-speedtest-rs).
            
            ### Installation
            ```bash
            cargo install mihomo-speedtest-rs
            ```
            
            See [CHANGELOG.md](https://github.com/KodeBarinn/mihomo-speedtest-rs/blob/main/CHANGELOG.md) for details.
          draft: false
          prerelease: false